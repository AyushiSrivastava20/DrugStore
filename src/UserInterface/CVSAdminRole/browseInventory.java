/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CVSAdminRole;

import Business.Store;
import Business.StoreCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ayushi
 */
public class browseInventory extends javax.swing.JPanel {

    /**
     * Creates new form browseInventory
     */
    private JPanel userProcessContainer;
    private StoreCatalog storeCatalog;
    
    public browseInventory(JPanel userProcessContainer,StoreCatalog storeCatalog ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.storeCatalog = storeCatalog;
        populateInventory();
    }

    public void populateInventory(){
        DefaultTableModel model = (DefaultTableModel) inventoryJTable.getModel();
        model.setRowCount(0);
        for (Store s : storeCatalog.getStoreList()) {
            Object row[] = new Object[2];
            row[0] = s;
            row[1] = s.getStoreId();
            model.addRow(row);
        
        }   
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        browseJButton = new javax.swing.JButton();
        searchBrowseJTextField = new javax.swing.JTextField();
        searchInventoryJTable = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        inventoryJTable.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        inventoryJTable.setForeground(new java.awt.Color(153, 0, 0));
        inventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Store ID ", "Store Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(inventoryJTable);

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 17)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText(" Browse Inventory");

        browseJButton.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        browseJButton.setForeground(new java.awt.Color(153, 0, 0));
        browseJButton.setText("Browse Inventory For Store >>>");
        browseJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        browseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseJButtonActionPerformed(evt);
            }
        });

        searchInventoryJTable.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        searchInventoryJTable.setForeground(new java.awt.Color(153, 0, 0));
        searchInventoryJTable.setText("Search >>");
        searchInventoryJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchInventoryJTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInventoryJTableActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Calibri", 3, 15)); // NOI18N
        backJButton.setForeground(new java.awt.Color(153, 0, 0));
        backJButton.setText("<< Back");
        backJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(browseJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchBrowseJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(searchInventoryJTable, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(202, 202, 202))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(browseJButton)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBrowseJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchInventoryJTable))
                .addGap(54, 54, 54)
                .addComponent(backJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseJButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = inventoryJTable.getSelectedRow();
        
        if(selectedRow<=0){
            Store st = (Store)inventoryJTable.getValueAt(selectedRow,0);
            AdminInventory ai = new AdminInventory(userProcessContainer,st);
            userProcessContainer.add("AdminInventory", ai);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
    }                                                

        else{
             JOptionPane.showMessageDialog(null,"Please Select a row from the table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_browseJButtonActionPerformed

    private void searchInventoryJTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInventoryJTableActionPerformed
        // TODO add your handling code here:
        String id = searchBrowseJTextField.getText();
        Store store = storeCatalog.searchStore(id);
        if(store==null){
            JOptionPane.showMessageDialog(null,"Please enter a proper Name");
            return;
        }
            AdminInventory ai = new AdminInventory(userProcessContainer,store);
            userProcessContainer.add("AdminInventory", ai);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }//GEN-LAST:event_searchInventoryJTableActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton browseJButton;
    private javax.swing.JTable inventoryJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchBrowseJTextField;
    private javax.swing.JButton searchInventoryJTable;
    // End of variables declaration//GEN-END:variables
}
